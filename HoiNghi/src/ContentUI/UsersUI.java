/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ContentUI;

import AdminUI.BlockButtonEditor;
import AdminUI.BlockButtonRenderer;
import AdminUI.ConferenceUserButtonEditor;
import AdminUI.ConferenceUserRenderer;
import Business.ConferenceBus;
import Business.UserBus;
import Business.UserConferenceBus;
import POJO.Conference;
import POJO.User;
import POJO.UserConference;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class UsersUI extends javax.swing.JPanel {

    /**
     * Creates new form UsersUI
     */
    final static private Color deufault = new Color(224, 224, 250);
    final static private Color colorCliked = new Color(84, 3, 156);
    final static private Color colorMoved = new Color(153, 153, 255);
    final static private Color colorMoved_2 = new Color(220, 220, 255);

    List<User> list;
    private int maxPag;

    private void filter() {
        UserNameFilter();
        ConferenceNameFileter();
        paginationFilter();
        ConferenceNameFileter();
    }

    private void ConferenceNameFileter() {
        int index = jConferenceCB.getSelectedIndex();
        
        if (index == 0 || index == -1) {
            return;
        }
        
        String conferenceName = jConferenceCB.getItemAt(index);

        for (int i = list.size() - 1; i >= 0; i--) {
            List<UserConference> userConferences = UserConferenceBus.getListUserConferenceIsAcceptedByUser(list.get(i));

            boolean has = false;
            for (int j = 0; j < userConferences.size(); j++) {
                if (conferenceName.compareTo(userConferences.get(j).getConference().getName()) == 0) {
                    has = true;
                    break;
                }
            }
            
            if(!has)
                list.remove(i);
        }
    }

    private void paginationFilter() {
        calculatePag();
        List<User> temp = new ArrayList<>();
        int start = (Integer.valueOf(jPosition.getText()) - 1) * (Integer.valueOf(jComboBox1.getSelectedItem().toString()));
        int end = Integer.valueOf(jPosition.getText()) * (Integer.valueOf(jComboBox1.getSelectedItem().toString())) - 1;

        if (end > list.size() - 1) {
            end = list.size() - 1;
        }

        for (int i = start; i <= end; i++) {
            temp.add(list.get(i));
        }

        jDescriptionPag.setText("Page " + jPosition.getText() + " for " + (start + 1) + "-" + (end + 1) + "/" + list.size());
        list.clear();

        for (int i = 0; i < temp.size(); i++) {
            list.add(temp.get(i));
        }

    }

    private void UserNameFilter() {
        if (jUserNameTF.getText().compareTo("User Name") == 0) {
            return;
        }

        for (int i = list.size() - 1; i >= 0; i--) {
            if (list.get(i).getName().toLowerCase().indexOf(jUserNameTF.getText().toLowerCase()) == -1) {
                list.remove(i);
            }

        }
    }

    private void calculatePag() {
        int countRow = list.size();

        if (countRow % (Integer.valueOf(jComboBox1.getSelectedItem().toString())) == 0) {
            maxPag = countRow / Integer.valueOf(jComboBox1.getSelectedItem().toString());
        } else {
            maxPag = (int) (countRow / Integer.valueOf(jComboBox1.getSelectedItem().toString())) + 1;
        }

        if (maxPag == 0) {
            maxPag = 1;
        }

    }

    public UsersUI() {
        initComponents();
        resetData();
    }

    public void resetData() {
        list = UserBus.getAllUser();
        Collections.reverse(list);
        filter();
        DefaultTableModel tm = (DefaultTableModel) jTable.getModel();
        for (int i = tm.getRowCount() - 1; i >= 0; i--) {
            tm.removeRow(i);
        }

        for (int i = 0; i < list.size(); i++) {
            tm.addRow(new Object[]{i + 1, list.get(i).getName(), list.get(i).getEmail(), list.get(i), list.get(i)});
        }

        jTable.setModel(tm);
        jTable.getColumnModel().getColumn(4).setCellRenderer(new BlockButtonRenderer());
        jTable.getColumnModel().getColumn(4).setCellEditor(new BlockButtonEditor(new JTextField()));
        jTable.getColumnModel().getColumn(3).setCellRenderer(new ConferenceUserRenderer());
        jTable.getColumnModel().getColumn(3).setCellEditor(new ConferenceUserButtonEditor(new JTextField()));
        jTable.setAutoCreateRowSorter(true);



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JPanel();
        jOption = new javax.swing.JPanel();
        jOption1 = new javax.swing.JPanel();
        jResetbtn = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jConferenceCB = new javax.swing.JComboBox<>();
        jUserNameTF = new javax.swing.JTextField();
        jOption2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jCount = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jBrief = new javax.swing.JLabel();
        jData = new javax.swing.JPanel();
        jPagination = new javax.swing.JPanel();
        jDescriptionPag = new javax.swing.JLabel();
        jPaginationButton = new javax.swing.JPanel();
        jFirstbtn = new javax.swing.JLabel();
        jPrebtn = new javax.swing.JLabel();
        jPosition = new javax.swing.JTextField();
        jNextbtn = new javax.swing.JLabel();
        jLastbtn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jHeader.setBackground(new java.awt.Color(224, 224, 250));
        jHeader.setPreferredSize(new java.awt.Dimension(100, 170));
        jHeader.setLayout(new java.awt.BorderLayout());

        jOption.setBackground(new java.awt.Color(255, 255, 255));
        jOption.setPreferredSize(new java.awt.Dimension(100, 50));
        jOption.setLayout(new java.awt.BorderLayout());

        jOption1.setBackground(new java.awt.Color(224, 224, 250));
        jOption1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 5, 1));
        jOption1.setMinimumSize(new java.awt.Dimension(100, 50));
        jOption1.setPreferredSize(new java.awt.Dimension(1000, 60));
        jOption1.setLayout(new java.awt.BorderLayout());

        jResetbtn.setBackground(new java.awt.Color(224, 224, 250));
        jResetbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jResetbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Available-Updates-icon.png"))); // NOI18N
        jResetbtn.setOpaque(true);
        jResetbtn.setPreferredSize(new java.awt.Dimension(70, 50));
        jResetbtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jResetbtnMouseMoved(evt);
            }
        });
        jResetbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jResetbtnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jResetbtnMouseReleased(evt);
            }
        });
        jOption1.add(jResetbtn, java.awt.BorderLayout.WEST);

        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 29));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 0));

        jConferenceCB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jConferenceCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Conference Name" }));
        jConferenceCB.setPreferredSize(new java.awt.Dimension(300, 50));
        jConferenceCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConferenceCBActionPerformed(evt);
            }
        });
        List<Conference> conferenceList = ConferenceBus.getAllConference();
        Collections.sort(conferenceList);
        for (int i = 0; i < conferenceList.size(); i++) {
            jConferenceCB.addItem(conferenceList.get(i).getName());
        }
        jPanel2.add(jConferenceCB);

        jUserNameTF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jUserNameTF.setText("User Name");
        jUserNameTF.setPreferredSize(new java.awt.Dimension(250, 50));
        jUserNameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jUserNameTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jUserNameTFFocusLost(evt);
            }
        });
        jUserNameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jUserNameTFKeyTyped(evt);
            }
        });
        jPanel2.add(jUserNameTF);

        jOption1.add(jPanel2, java.awt.BorderLayout.EAST);

        jOption.add(jOption1, java.awt.BorderLayout.NORTH);

        jOption2.setBackground(new java.awt.Color(224, 224, 250));
        jOption2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jOption2.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(224, 224, 250));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 60));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jCount.setPreferredSize(new java.awt.Dimension(220, 0));
        jCount.setLayout(new java.awt.BorderLayout());

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        jComboBox1.setPreferredSize(new java.awt.Dimension(70, 50));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jCount.add(jComboBox1, java.awt.BorderLayout.EAST);

        jLabel1.setBackground(new java.awt.Color(224, 224, 250));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Number of lines ");
        jLabel1.setOpaque(true);
        jCount.add(jLabel1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jCount, java.awt.BorderLayout.WEST);

        jOption2.add(jPanel1, java.awt.BorderLayout.WEST);

        jOption.add(jOption2, java.awt.BorderLayout.CENTER);

        jHeader.add(jOption, java.awt.BorderLayout.CENTER);

        jBrief.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jBrief.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBrief.setText("User manager ");
        jBrief.setPreferredSize(new java.awt.Dimension(78, 55));
        jHeader.add(jBrief, java.awt.BorderLayout.NORTH);

        add(jHeader, java.awt.BorderLayout.NORTH);

        jData.setBackground(new java.awt.Color(255, 102, 51));
        jData.setOpaque(false);
        jData.setLayout(new java.awt.BorderLayout());

        jPagination.setBackground(new java.awt.Color(224, 224, 250));
        jPagination.setPreferredSize(new java.awt.Dimension(1000, 50));
        jPagination.setLayout(new java.awt.BorderLayout());

        jDescriptionPag.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jDescriptionPag.setText("Page 1 for 1-6/100");
        jDescriptionPag.setPreferredSize(new java.awt.Dimension(300, 13));
        jPagination.add(jDescriptionPag, java.awt.BorderLayout.WEST);

        jPaginationButton.setOpaque(false);
        jPaginationButton.setPreferredSize(new java.awt.Dimension(290, 50));
        jPaginationButton.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        jFirstbtn.setBackground(new java.awt.Color(224, 224, 250));
        jFirstbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jFirstbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Rewind-icon.png"))); // NOI18N
        jFirstbtn.setOpaque(true);
        jFirstbtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jFirstbtnMouseMoved(evt);
            }
        });
        jFirstbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jFirstbtnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jFirstbtnMouseReleased(evt);
            }
        });
        jPaginationButton.add(jFirstbtn);

        jPrebtn.setBackground(new java.awt.Color(224, 224, 250));
        jPrebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPrebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Chevron-Left-icon.png"))); // NOI18N
        jPrebtn.setOpaque(true);
        jPrebtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPrebtnMouseMoved(evt);
            }
        });
        jPrebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPrebtnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPrebtnMouseReleased(evt);
            }
        });
        jPaginationButton.add(jPrebtn);

        jPosition.setEditable(false);
        jPosition.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPosition.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPosition.setText("1");
        jPaginationButton.add(jPosition);

        jNextbtn.setBackground(new java.awt.Color(224, 224, 250));
        jNextbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jNextbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Chevron-Right-icon.png"))); // NOI18N
        jNextbtn.setOpaque(true);
        jNextbtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jNextbtnMouseMoved(evt);
            }
        });
        jNextbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jNextbtnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jNextbtnMouseReleased(evt);
            }
        });
        jPaginationButton.add(jNextbtn);

        jLastbtn.setBackground(new java.awt.Color(224, 224, 250));
        jLastbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLastbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Fast-Forward-icon.png"))); // NOI18N
        jLastbtn.setOpaque(true);
        jLastbtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLastbtnMouseMoved(evt);
            }
        });
        jLastbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLastbtnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLastbtnMouseReleased(evt);
            }
        });
        jPaginationButton.add(jLastbtn);

        jPagination.add(jPaginationButton, java.awt.BorderLayout.EAST);

        jData.add(jPagination, java.awt.BorderLayout.SOUTH);

        jScrollPane1.setOpaque(false);

        jTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DefaultTableModel tm = new DefaultTableModel(new Object[0][], new String[]{"STT", "Name", "Email", "Conferences", "Block"}) {
            @Override
            public Class

            <?> getColumnClass(int col) {
                //here it really returns the right column class (Integer.class)
                Class retVal = Object.class

                ;

                if (getRowCount()
                    > 0) {
                    retVal = getValueAt(0, col).getClass();
                }
                return retVal ;
            }

        };
        jTable.setModel(tm);
        jTable.setFocusable(false);
        jTable.setGridColor(new java.awt.Color(153, 153, 255));
        jTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable.setRowHeight(50);
        jTable.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jTable.setShowGrid(true);
        jTable.setShowVerticalLines(false);
        jTable.getTableHeader().setResizingAllowed(false);
        jTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable);

        jData.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jData, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jResetbtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jResetbtnMouseMoved
        // TODO add your handling code here:
        jResetbtn.setBackground(colorMoved);
    }//GEN-LAST:event_jResetbtnMouseMoved

    private void jResetbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jResetbtnMouseExited
        // TODO add your handling code here:
        jResetbtn.setBackground(deufault);
    }//GEN-LAST:event_jResetbtnMouseExited

    private void jResetbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jResetbtnMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jResetbtnMouseReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        calculatePag();
        jPosition.setText("1");
        resetData();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jFirstbtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFirstbtnMouseMoved
        // TODO add your handling code here:
        jFirstbtn.setBackground(colorMoved);
    }//GEN-LAST:event_jFirstbtnMouseMoved

    private void jFirstbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFirstbtnMouseExited
        // TODO add your handling code here:
        jFirstbtn.setBackground(deufault);
    }//GEN-LAST:event_jFirstbtnMouseExited

    private void jFirstbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFirstbtnMouseReleased
        // TODO add your handling code here:
        jPosition.setText("1");
        resetData();
    }//GEN-LAST:event_jFirstbtnMouseReleased

    private void jPrebtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPrebtnMouseMoved
        // TODO add your handling code here:
        jPrebtn.setBackground(colorMoved);
    }//GEN-LAST:event_jPrebtnMouseMoved

    private void jPrebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPrebtnMouseExited
        // TODO add your handling code here:
        jPrebtn.setBackground(deufault);
    }//GEN-LAST:event_jPrebtnMouseExited

    private void jPrebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPrebtnMouseReleased
        // TODO add your handling code here:
        int currentPosition = Integer.valueOf(jPosition.getText());
        currentPosition = currentPosition == 1 ? 1 : --currentPosition;
        jPosition.setText(String.valueOf(currentPosition));
        resetData();
    }//GEN-LAST:event_jPrebtnMouseReleased

    private void jNextbtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jNextbtnMouseMoved
        // TODO add your handling code here:
        jNextbtn.setBackground(colorMoved);
    }//GEN-LAST:event_jNextbtnMouseMoved

    private void jNextbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jNextbtnMouseExited
        // TODO add your handling code here:
        jNextbtn.setBackground(deufault);
    }//GEN-LAST:event_jNextbtnMouseExited

    private void jNextbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jNextbtnMouseReleased
        // TODO add your handling code here:
        int currentPosition = Integer.valueOf(jPosition.getText());
        currentPosition = currentPosition == maxPag ? maxPag : ++currentPosition;
        jPosition.setText(String.valueOf(currentPosition));
        resetData();
    }//GEN-LAST:event_jNextbtnMouseReleased

    private void jLastbtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLastbtnMouseMoved
        // TODO add your handling code here:
        jLastbtn.setBackground(colorMoved);
    }//GEN-LAST:event_jLastbtnMouseMoved

    private void jLastbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLastbtnMouseExited
        // TODO add your handling code here:
        jLastbtn.setBackground(deufault);
    }//GEN-LAST:event_jLastbtnMouseExited

    private void jLastbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLastbtnMouseReleased
        // TODO add your handling code here:
        jPosition.setText(String.valueOf(maxPag));
        resetData();
    }//GEN-LAST:event_jLastbtnMouseReleased

    private void jConferenceCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConferenceCBActionPerformed
        // TODO add your handling code here:
        jPosition.setText("1");
        resetData();
    }//GEN-LAST:event_jConferenceCBActionPerformed

    private void jUserNameTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jUserNameTFFocusGained
        // TODO add your handling code here:
        if (jUserNameTF.getText().compareTo("User Name") == 0)
            jUserNameTF.setText("");
    }//GEN-LAST:event_jUserNameTFFocusGained

    private void jUserNameTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jUserNameTFFocusLost
        // TODO add your handling code here:
        if (jUserNameTF.getText().compareTo("") == 0)
            jUserNameTF.setText("User Name");
    }//GEN-LAST:event_jUserNameTFFocusLost

    private void jUserNameTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jUserNameTFKeyTyped
        // TODO add your handling code here:
        jPosition.setText("1");
        resetData();
    }//GEN-LAST:event_jUserNameTFKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jBrief;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jConferenceCB;
    private javax.swing.JPanel jCount;
    private javax.swing.JPanel jData;
    private javax.swing.JLabel jDescriptionPag;
    private javax.swing.JLabel jFirstbtn;
    private javax.swing.JPanel jHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLastbtn;
    private javax.swing.JLabel jNextbtn;
    private javax.swing.JPanel jOption;
    private javax.swing.JPanel jOption1;
    private javax.swing.JPanel jOption2;
    private javax.swing.JPanel jPagination;
    private javax.swing.JPanel jPaginationButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jPosition;
    private javax.swing.JLabel jPrebtn;
    private javax.swing.JLabel jResetbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jUserNameTF;
    // End of variables declaration//GEN-END:variables
}
