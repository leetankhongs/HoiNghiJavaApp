package POJO;
// Generated Jul 5, 2020, 9:32:46 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserConference generated by hbm2java
 */
@Entity
@Table(name="user_conference"
    ,catalog="conferencemanagement"
)
public class UserConference  implements java.io.Serializable {


     private UserConferenceId id;
     private Conference conference;
     private User user;
     private Date registationTime;
     private Byte isAccepted;

    public UserConference() {
    }

	
    public UserConference(UserConferenceId id, Conference conference, User user) {
        this.id = id;
        this.conference = conference;
        this.user = user;
    }
    public UserConference(Conference conference, User user, Date registationTime) {
       this.id = new UserConferenceId(conference.getId(), user.getId());
       this.conference = conference;
       this.user = user;
       this.registationTime = new Date();
       this.isAccepted = 0;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idconference", column=@Column(name="IDConference", nullable=false, length=4) ), 
        @AttributeOverride(name="iduser", column=@Column(name="IDUser", nullable=false, length=10) ) } )
    public UserConferenceId getId() {
        return this.id;
    }
    
    public void setId(UserConferenceId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDConference", nullable=false, insertable=false, updatable=false)
    public Conference getConference() {
        return this.conference;
    }
    
    public void setConference(Conference conference) {
        this.conference = conference;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDUser", nullable=false, insertable=false, updatable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RegistationTime", length=19)
    public Date getRegistationTime() {
        return this.registationTime;
    }
    
    public void setRegistationTime(Date registationTime) {
        this.registationTime = registationTime;
    }

    
    @Column(name="IsAccepted")
    public Byte getIsAccepted() {
        return this.isAccepted;
    }
    
    public void setIsAccepted(Byte isAccepted) {
        this.isAccepted = isAccepted;
    }




}


