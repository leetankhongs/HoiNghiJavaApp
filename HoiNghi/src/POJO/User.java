package POJO;
// Generated Jul 9, 2020, 5:02:16 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="conferencemanagement"
    , uniqueConstraints = @UniqueConstraint(columnNames="IDAccount") 
)
public class User  implements java.io.Serializable {


     private String id;
     private Account account;
     private String name;
     private String email;
     private Byte isAdmin;
     private Byte isDelete;
     private Set<UserConference> userConferences = new HashSet<UserConference>(0);

    public User() {
    }

	
    public User(String id) {
        this.id = id;
    }
    public User(Account account, String name, String email) {
       this.account = account;
       this.name = name;
       this.email = email;
       this.isAdmin = 0;
       this.isDelete = 0;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, length=10)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IDAccount", unique=true)
    public Account getAccount() {
        return this.account;
    }
    
    public void setAccount(Account account) {
        this.account = account;
    }

    
    @Column(name="Name", length=32)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="Email", length=64)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="IsAdmin")
    public Byte getIsAdmin() {
        return this.isAdmin;
    }
    
    public void setIsAdmin(Byte isAdmin) {
        this.isAdmin = isAdmin;
    }

    
    @Column(name="IsDelete")
    public Byte getIsDelete() {
        return this.isDelete;
    }
    
    public void setIsDelete(Byte isDelete) {
        this.isDelete = isDelete;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<UserConference> getUserConferences() {
        return this.userConferences;
    }
    
    public void setUserConferences(Set<UserConference> userConferences) {
        this.userConferences = userConferences;
    }




}


